name: Tag on Merge to Master

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest version from csproj
        id: get_version
        run: |
          VERSION=$(grep -m1 '<Version>' KOptional/KOptional.csproj | sed -E 's/.*<Version>(.*)<\/Version>.*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${{ steps.get_version.outputs.version }}
          git push https://x-access-token:${{ secrets.TOKEN_GITHUB }}@github.com/${{ github.repository }} v${{ steps.get_version.outputs.version }}

      - name: Nuget Pack
        run: dotnet pack --no-build --configuration Release --output ./nupkg

      - name: Publish to NuGet
        run: dotnet nuget push bin/Release/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        if: github.ref_type == 'tag'
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all tags

      - name: Get version from csproj
        id: get_version
        run: |
          VERSION=$(grep -m1 '<Version>' KOptional/KOptional.csproj | sed -E 's/.*<Version>(.*)<\/Version>.*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Fail if tag exists
        run: |
          if git rev-parse "v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
            echo "Error: Tag v${{ steps.get_version.outputs.version }} already exists."
            exit 1
          fi

      - name: Restore dependencies
        run: dotnet restore KOptional/KOptional.csproj

      - name: Build
        run: dotnet build KOptional/KOptional.csproj --configuration Release --no-restore

      - name: Test
        run: dotnet test KOptional/KOptional.csproj --configuration Release --no-build

      - name: Pack
        run: dotnet pack KOptional/KOptional.csproj --configuration Release --no-build --output ./nupkg

      - name: Publish to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json